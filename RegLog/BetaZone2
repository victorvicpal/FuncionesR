BetaZone2 <- function(player,season)
{
    #Required packages
    require(logistf)
    require(aod)
    require(matrixcalc)

	#SQL <- paste("select player, x ,y , if(result='made',1,0) as result, if(x<3 or x>47,1,if(y>(sqrt(pow(23.71,2)-Pow((x-25),2))+5.25),1,0)) as triple,if(y<=10 and x>=17 and x<=33,1,0) as zone1,if(y<=19 and y>10 and x>=17 and x<=33,1,0) as zone2,if(x>=17 and x<=33 and y>19 and (y>=((13.75/(-8))*(x-25)+5.25)) and (y>=((13.75/8)*(x-25)+5.25)) and y<=(sqrt(pow(23.71,2)-Pow((x-25),2))+5.25),1,0) as zone3,if(x<17 and x>=3 and (y<((13.75/(-8))*(x-25)+5.25)) and y<=(sqrt(pow(23.71,2)-Pow((x-25),2))+5.25),1,0) as zone4,if(x>33 and x<=47 and (y<((13.75/8)*(x-25)+5.25)) and y<=(sqrt(pow(23.71,2)-Pow((x-25),2))+5.25),1,0) as zone5 from nba.play_by_play where etype='shot' and y>3 and game_id in (select id from nba.game where season='",season,"') and player='",player,"';", sep="")
	SQL <- paste("select player, x ,y , if(result='made',1,0) as result, if(x<3 or x>47,1,if(y>(sqrt((23.71*23.71)-(x-25)*(x-25))+5.25),1,0)) as triple,if(y<=10 and x>=17 and x<=33,1,0) as zone1,if(y<=19 and y>10 and x>=17 and x<=33,1,0) as zone2,if(y>19 and (y>=((13.75/(-8))*(x-25)+5.25)) and (y>=((13.75/8)*(x-25)+5.25)) and y<=(sqrt((23.71*23.71)-(x-25)*(x-25))+5.25),1,0) as zone3,if(x<17 and x>=3 and (y<((13.75/(-8))*(x-25)+5.25)) and y<=(sqrt((23.71*23.71)-(x-25)*(x-25))+5.25),1,0) as zone4,if(x>33 and x<=47 and (y<((13.75/8)*(x-25)+5.25)) and y<=(sqrt((23.71*23.71)-(x-25)*(x-25))+5.25),1,0) as zone5 from nba.play_by_play where etype='shot' and y>3 and game_id in (select id from nba.game where season='",season,"') and player='",player,"';", sep="")
	M <- dbGetQuery(con,SQL)

    #Matrix exploration
    Means <- apply(M[,5:10],2,mean)
    ZonePerc <- apply(M[,5:10],2,function(x,y) length(x[x==1 & y==1])/length(x[x==1]), y=M$result)

    #Triple or not
    if (Means[1]<0.1) {Means <- Means[-1]}

    Means <- Means[Means!=0]

    xnom <- names(Means)
    minm <- names(Means[which.min(Means)])


    #Initial formula
    form <- paste0('(1+',paste0(xnom,collapse = '+'),')')
    formula <- as.formula(paste0('result~(x+y+x*y+I(x^2)+I(y^2))*',form))

    #All zone model (logistic regression)
    M[,5:10] <- apply(M[,5:10],2,factor)
    output <- logistf(formula,data=M)

    #First Wald Test
    t <- try(wald.test(b= coef(output), Sigma= vcov(output), Terms = 1:output$df[1]))
    op <- 0

    while ("try-error" %in% class(t))
    {
        op <- op+1
        minm <- names(Means[which.min(Means)])
        Means <- Means[-which.min(Means)]
        form <- gsub(paste0('[+]',minm),'',form)
        formula <- as.formula(paste0('result~(x+y+x*y+I(x^2)+I(y^2))*',form))
        output <- logistf(formula,data=M)
        t <- try(wald.test(b=coef(output), Sigma=vcov(output), Terms = 1:output$df[1]))
        if (op==6) {break}
    }

    cont <- 0

    #Errores en el bucle siguiente - Probar con LR ~ 5
    if (t$result$chi2[3]>0.05)
    {
        Means2 <- Means
        form2 <- form
        minm2 <- names(Means2[which.min(Means2)])
        Means2 <- Means2[-which.min(Means2)]
        form2 <- gsub(paste0('[+]',minm),'',form2)
        formula2 <- as.formula(paste0('result~(x+y+x*y+I(x^2)+I(y^2))*',form2))
        output2 <- logistf(formula,data=M)
        t2 <- wald.test(b=coef(output2), Sigma=vcov(output2), Terms = 1:output2$df[1])
        while (t2$result$chi2[3]>0.05)
        {
        cont <- cont + 1
        minm2 <- names(Means2[which.min(Means2)])
        form2 <- gsub(paste0('[+]',minm2),'',form2)
        Means2 <- Means2[-which.min(Means2)]
        formula2 <- as.formula(paste0('result~(x+y+x*y+I(x^2)+I(y^2))*',form2))
        output2 <- logistf(formula,data=M)
        t2 <- wald.test(b=coef(output2), Sigma=vcov(output2), Terms = 1:output2$df[1])
        if (cont==3) {break}
        }
        output2 <- output
    }

LR <- (output$loglik[2]-output$loglik[1])*2

print(output$coefficients)
print(LR)
print(t)
print(ZonePerc)
print(Means)

}