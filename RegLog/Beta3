Beta3 <- function(player, season)
{
	SQL <- paste("select player, x ,y , if(result='made',1,0) as result, if(type='3pt',1,0) as triple from nba.play_by_play where etype='shot' and y>3 and game_id in (select id from nba.game where season='",season,"') and player='",player,"';", sep="")
	M <- dbGetQuery(con,SQL)
	M$triple <- as.factor(M$triple)
	SQL2 <- paste("select a.num, ifnull(b.triple,0) as triple, ifnull(b.triple,0)/a.num as Q from (select player, count(player) as num from nba.play_by_play where etype='shot' and player='",player,"' and game_id in (select id from nba.game where season='",season,"')) A left join (select player, count(player) as triple from nba.play_by_play where etype='shot' and player='",player,"' and type='3pt' and game_id in (select id from nba.game where season='",season,"')) b on a.player=b.player;", sep="")
	tr <- dbGetQuery(con,SQL2)
	tr$Q <- as.numeric(tr$Q)
	s <- rep(0,13)
	names(s) <- c("(Intercept)","triple1","x","y","I(x^2)","I(y^2)","triple1:x","triple1:y","x:y","triple1:I(x^2)","triple1:I(y^2)","triple1:x:y","LR")

		if (tr$triple>3)
			{
			output1 <- logistf(result ~ triple*x + triple*y + triple + triple*x*y + triple*I(x^2) + triple*I(y^2), data = M, family = binomial)
			Estimates1 <- output1$coefficients
			LR1 <- -2*output1$loglik[1]+2*output1$loglik[2]
			output2 <- logistf(result ~ x + y + x*y + I(x^2) + I(y^2), data = M, family = binomial)
			Estimates2 <- output2$coefficients
			LR2 <- -2*output2$loglik[1]+2*output2$loglik[2]
			}
		else
			{
			output2 <- logistf(result ~ x + y + x*y + I(x^2) + I(y^2), data = M, family = binomial)
			Estimates2 <- output2$coefficients
			LR2 <- -2*output2$loglik[1]+2*output2$loglik[2]
			LR1 <- 0
			}

	if (LR1>LR2)
	{
		v <- c(Estimates1,LR1)
		names(v) <- c(names(Estimates1),"LR")
		v
	}
	else
	{
		v <- c(Estimates2,LR2)
		names(v) <- c(names(Estimates2),"LR")
		v
	}

r <- match(names(v), names(s),0)

for (i in 1:length(r))
	{
		s[r[i]] <- v[i]
	}

s
}